1、整合Spring
  1）导入jar包
    spring-core
    spring-context
    spring-aop
    spring-exxxxxx
    spring-bean
    commons-logging
  2）配置applicationContext.xml
	
2、整合mybatis
  1）导包
     mybatis-3.4.5
     mysql-connector-java
  2）配置mybatis的核心配置文件mybatis-config.xml
  3）编写映射接口 + 映射文件
  4）调用api查询数据库

3、将spring和mybatis进行整合
  1）导包
     mybatis-spring-1.3.1.jar
     spring-jdbc-4.3.9.RELEASE.jar
     spring-tx-4.3.9.RELEASE.jar
     c3p0-0.9.5.2.jar
     mchange-commons-java-0.2.11.jar
  2）配置datasource
  3）配置SqlSessioFactoryBean
    <!-- dao层的sqlsessionfactorybean -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<!-- 配置数据源 -->
    	<property name="dataSource" ref="dataSource"/>
    	<!-- 统一管理mybatis的映射文件 -->
    	<property name="mapperLocations" value="classpath:com/qf/ssm/mapper/*.xml"></property>
    	<!-- 别名的配置 -->
    	<property name="typeAliasesPackage" value="com.qf.ssm.entity"></property>
    	<!-- 加载mybatis的核心配置文件 -->
    	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>
  4）配置mybatis的映射接口扫描（用mybatis替换掉dao层）：
    <beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:mybaits="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://mybatis.org/schema/mybatis-spring
       http://mybatis.org/schema/mybatis-spring.xsd">

     <!-- 扫描mybatis的映射接口 -->
     <mybaits:scan base-package="com.qf.ssm.mapper"/>

   5）在service层直接注入映射接口

4、整合SpringMVC
   1）导包
      spring-web-4.3.9.RELEASE.jar
      spring-webmvc-4.3.9.RELEASE.jar
   2）配置web.xml
      <!-- 配置spring需要加载的配置文件路径 -->
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>classpath:applicationContext-*.xml</param-value>
  </context-param>
  
  <!-- 监听器启动Spring容器的 -->
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- 配置SpringMVC的核心servlet -->
  <servlet>
  	<servlet-name>springmvc</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>classpath:springmvc.xml</param-value>
  	</init-param>
  	<load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>springmvc</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
 
    3）配置SpringMVC核心配置文件
      <?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 配置SpringMVC的注解驱动 -->
	<mvc:annotation-driven/>
	
	<!-- 默认servlet处理静态资源 -->
	<mvc:default-servlet-handler/>

	<!-- 扫描controller -->
	<context:component-scan base-package="com.qf.ssm.controller"/>
	
	<!-- 
		视图解析器 - 逻辑视图需要（非逻辑视图无需视图解析器）
	 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<!-- 配置后缀 -->
		<property name="suffix" value=".jsp"/>
	</bean>

</beans>

    4）测试整合完成
   
