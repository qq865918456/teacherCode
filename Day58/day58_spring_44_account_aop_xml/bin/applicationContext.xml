<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">


	<!-- 1.加载属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 2.配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- 作用：控制事务提交/回滚 -->
	<!-- 3.配置事务管理 -->
	<bean id="txManager" class=" org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 作用:给不同方法设置不同的属性 -->
	<!-- 4.事务的策略(属性) -->
	<tx:advice id="txAdvices" transaction-manager="txManager">
		<tx:attributes>
			<!-- name:方法的名称，支持通配符 -->
			<tx:method name="t*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
			
			<!-- 读 -->
			<tx:method name="query*" isolation="DEFAULT" propagation="REQUIRED" read-only="true"/>
			<tx:method name="get*" isolation="DEFAULT" propagation="REQUIRED" read-only="true"/>
			<tx:method name="find*" isolation="DEFAULT" propagation="REQUIRED" read-only="true"/>
			
			<!-- 写 -->
			<tx:method name="add*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
			<tx:method name="insert*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
			<tx:method name="udpate*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
			<tx:method name="delete*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
			<tx:method name="remove*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
			
		</tx:attributes>
	</tx:advice>
	
	<!-- 作用：切面(范围) -->
	<!-- 4.AOP的配置 -->
	<aop:config>
		<!-- 这里一般都是指到service层，因为事务一般都是加到service层
			表达式和方法都能匹配到的时候才会交给事务管理器处理，如果匹配不到或者只匹配到其中一个就使用默认的事务
		 -->
		<aop:advisor advice-ref="txAdvices" pointcut="execution(* com.qf.service.*.*(..))" />	
	</aop:config>
	
	<!-- 5.配置accountDao -->
	<bean id="accountDao" class="com.qf.dao.impl.AccountDaoImpl">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 6.配置accountService -->
	<bean id="accountService" class="com.qf.service.impl.AccountServiceImpl">
		<property name="accountDao" ref="accountDao"></property>
	</bean>
	
	
</beans>