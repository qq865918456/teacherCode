

总结
	1.缓存
		a)缓存概念
			1)提高查询效率
			2)缺点就是一条数据方了两个地方
			3)经常别查询，很少被修改，不是很重数据，允许偶尔出现并发问题可以放在缓存中
			4)经常被修改，重要的数据，不允许出现并发问题的数据不能放在缓存中
			5)缓存的底层都是通过Map实现的
		b)Hibernate二级缓存(sessionFactory)
			1)内置缓存：给HIbernate自己使用
			2)外置缓存:给用户使用
				a)它只是提供了一个接口，具体实现第三方去做
				b)ehcache
					1)导入jar包
					2)配置
						a)开启二级缓存
						b)确定二级缓存供应商
						c)确定要缓存的对象
							1)缓存一个集合的时候要把集合中的对象也要缓存起来
					3)ehcache的配置文件
		
		c)查询缓存
			1)主要针对HQL的查询
			2)使用
				1)前提要有二级缓存
				2)开启查询缓存
				3)开关
	2.批量操作
		1)框架是提高开发效率
		2)Hibernate底层也是调用jdbc
		3)在进行批量操作的时候使用jdbc
		4)方法
			1)save:把sql写好了，反倒缓存区中
			2)flush:把缓存区的数据刷新到数据库
			3)commit
				a)提交事务
				b)隐式的调用flush()
				c)关闭session
	3.连接池
		1)dbcp/cp30
		2)重点掌握连接池原理
		3)使用连接池
			a)导入jar包
			b)配置
				1)c3p0驱动
				2)c3p0属性
	4.锁
		1)为什么会出现：解决并发问题
		2)悲观锁
			a)利用数据库的锁机制实现的(select * from t_user where id = 1 for update)
			b)Hibernate怎么实现
			b)Hibernate怎么实现
				1)session.get(User.class,1,LockOptios.UPGRADE);
		2)乐观锁
			a)利用版本号来实现
				1)提交的时候先对比版本号是否一致
					a)如果一致就提交，版本号自增
					b)如果不一致就不让提交，说明数据已经被人修改
			b)Hibernate怎么实现
				1)对象和表中各自添加一个version字段
				2)在映射文件中<version>配置
	5.session的关闭实际
		1)OpenSessionInViewFilter
		
		
1.缓存
	1)一级缓存(session)
		a)使用load或get查询的都在
		b)使用HQL查询的时候不在，要使用查询缓存
	2)二级缓存(sessionFactory)
		a)只要配置了get/load/hql都在
	3)查询缓存(只要针对HQL查询)