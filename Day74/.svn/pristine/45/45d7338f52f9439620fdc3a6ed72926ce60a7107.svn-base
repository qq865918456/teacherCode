<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.oa.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.qf.oa.entity.Role" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="rolename" property="rolename" jdbcType="VARCHAR" />
    <result column="roledesc" property="roledesc" jdbcType="VARCHAR" />
    <result column="rolestate" property="rolestate" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="HaveResultMap" type="role" extends="BaseResultMap">
    <result column="isHave" property="isHave" jdbcType="VARCHAR"/>
  </resultMap>

  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, rolename, roledesc, rolestate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qf.oa.entity.Role" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into role (id, rolename, roledesc, 
      rolestate)
    values (#{id,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{roledesc,jdbcType=VARCHAR}, 
      #{rolestate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.oa.entity.Role" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="rolename != null" >
        rolename,
      </if>
      <if test="roledesc != null" >
        roledesc,
      </if>
      <if test="rolestate != null" >
        rolestate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledesc != null" >
        #{roledesc,jdbcType=VARCHAR},
      </if>
      <if test="rolestate != null" >
        #{rolestate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.oa.entity.Role" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update role
    <set >
      <if test="rolename != null" >
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledesc != null" >
        roledesc = #{roledesc,jdbcType=VARCHAR},
      </if>
      <if test="rolestate != null" >
        rolestate = #{rolestate,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.oa.entity.Role" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update role
    set rolename = #{rolename,jdbcType=VARCHAR},
      roledesc = #{roledesc,jdbcType=VARCHAR},
      rolestate = #{rolestate,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="queryAll" resultMap="BaseResultMap">
    select * from role
  </select>

  <insert id="insertRolesAndEmp">
    insert into emp_role_table values
      <foreach collection="rids" item="rid" separator=",">
        (#{eid}, #{rid}, now())
      </foreach>
  </insert>

  <select id="queryRolesByEid" resultMap="HaveResultMap">
    select *,
    if((select count(*) from emp_role_table ert where ert.rid = r.id and ert.eid = #{eid})=0,'false','true') as isHave
    from role r
  </select>

  <delete id="deleteRoleRescTable">
    delete from role_resc_table where rid = #{rid}
  </delete>
</mapper>